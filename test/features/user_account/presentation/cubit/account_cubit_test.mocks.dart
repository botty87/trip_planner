// Mocks generated by Mockito 5.4.4 from annotations
// in trip_planner/test/features/user_account/presentation/cubit/account_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:dartz/dartz.dart' as _i3;
import 'package:internet_connection_checker_plus/internet_connection_checker_plus.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:trip_planner/core/usecases/usecase.dart' as _i9;
import 'package:trip_planner/features/trips/domain/repositories/trips_repository.dart'
    as _i4;
import 'package:trip_planner/features/user_account/domain/repositories/user_repository.dart'
    as _i2;
import 'package:trip_planner/features/user_account/domain/usecases/delete_user.dart'
    as _i12;
import 'package:trip_planner/features/user_account/domain/usecases/logout_user.dart'
    as _i6;
import 'package:trip_planner/features/user_account/domain/usecases/reauthenticate_user.dart'
    as _i10;
import 'package:trip_planner/features/user_account/domain/usecases/update_user_details.dart'
    as _i11;
import 'package:trip_planner/features/user_account/errors/user_failures.dart'
    as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserRepository_0 extends _i1.SmartFake
    implements _i2.UserRepository {
  _FakeUserRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTripsRepository_2 extends _i1.SmartFake
    implements _i4.TripsRepository {
  _FakeTripsRepository_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInternetConnection_3 extends _i1.SmartFake
    implements _i5.InternetConnection {
  _FakeInternetConnection_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LogoutUser].
///
/// See the documentation for Mockito's code generation for more information.
class MockLogoutUser extends _i1.Mock implements _i6.LogoutUser {
  @override
  _i2.UserRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeUserRepository_0(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeUserRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.UserRepository);

  @override
  _i7.Future<_i3.Either<_i8.UserFailures, void>> call(_i9.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i7.Future<_i3.Either<_i8.UserFailures, void>>.value(
            _FakeEither_1<_i8.UserFailures, void>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.Either<_i8.UserFailures, void>>.value(
                _FakeEither_1<_i8.UserFailures, void>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i7.Future<_i3.Either<_i8.UserFailures, void>>);
}

/// A class which mocks [ReauthenticateUser].
///
/// See the documentation for Mockito's code generation for more information.
class MockReauthenticateUser extends _i1.Mock
    implements _i10.ReauthenticateUser {
  @override
  _i2.UserRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeUserRepository_0(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeUserRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.UserRepository);

  @override
  _i7.Future<_i3.Either<_i8.UserFailures, void>> call(
          _i10.ReauthenticateUserParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i7.Future<_i3.Either<_i8.UserFailures, void>>.value(
            _FakeEither_1<_i8.UserFailures, void>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.Either<_i8.UserFailures, void>>.value(
                _FakeEither_1<_i8.UserFailures, void>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i7.Future<_i3.Either<_i8.UserFailures, void>>);
}

/// A class which mocks [UpdateUserDetails].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateUserDetails extends _i1.Mock implements _i11.UpdateUserDetails {
  @override
  _i2.UserRepository get userRepository => (super.noSuchMethod(
        Invocation.getter(#userRepository),
        returnValue: _FakeUserRepository_0(
          this,
          Invocation.getter(#userRepository),
        ),
        returnValueForMissingStub: _FakeUserRepository_0(
          this,
          Invocation.getter(#userRepository),
        ),
      ) as _i2.UserRepository);

  @override
  _i7.Future<_i3.Either<_i8.UserFailures, void>> call(
          _i11.UpdateUserDetailsParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i7.Future<_i3.Either<_i8.UserFailures, void>>.value(
            _FakeEither_1<_i8.UserFailures, void>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.Either<_i8.UserFailures, void>>.value(
                _FakeEither_1<_i8.UserFailures, void>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i7.Future<_i3.Either<_i8.UserFailures, void>>);
}

/// A class which mocks [DeleteUser].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeleteUser extends _i1.Mock implements _i12.DeleteUser {
  @override
  _i2.UserRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeUserRepository_0(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeUserRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.UserRepository);

  @override
  _i4.TripsRepository get tripsRepository => (super.noSuchMethod(
        Invocation.getter(#tripsRepository),
        returnValue: _FakeTripsRepository_2(
          this,
          Invocation.getter(#tripsRepository),
        ),
        returnValueForMissingStub: _FakeTripsRepository_2(
          this,
          Invocation.getter(#tripsRepository),
        ),
      ) as _i4.TripsRepository);

  @override
  _i5.InternetConnection get internetConnection => (super.noSuchMethod(
        Invocation.getter(#internetConnection),
        returnValue: _FakeInternetConnection_3(
          this,
          Invocation.getter(#internetConnection),
        ),
        returnValueForMissingStub: _FakeInternetConnection_3(
          this,
          Invocation.getter(#internetConnection),
        ),
      ) as _i5.InternetConnection);

  @override
  _i7.Future<_i3.Either<_i8.UserFailures, void>> call(
          _i12.DeleteUserParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i7.Future<_i3.Either<_i8.UserFailures, void>>.value(
            _FakeEither_1<_i8.UserFailures, void>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.Either<_i8.UserFailures, void>>.value(
                _FakeEither_1<_i8.UserFailures, void>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i7.Future<_i3.Either<_i8.UserFailures, void>>);
}

// Mocks generated by Mockito 5.4.4 from annotations
// in trip_planner/test/features/import_old_trips/data/repositories/old_trips_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:quiver/collection.dart' as _i5;
import 'package:trip_planner/features/import_old_trips/data/datasources/old_trips_data_source.dart'
    as _i2;
import 'package:trip_planner/features/import_old_trips/domain/entities/old_trip.dart' as _i4;
import 'package:trip_planner/features/import_old_trips/domain/entities/trip_stops_container.dart'
    as _i7;
import 'package:trip_planner/features/trips/domain/entities/trip.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [OldTripsDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockOldTripsDataSource extends _i1.Mock implements _i2.OldTripsDataSource {
  @override
  _i3.Future<List<_i4.OldTrip>> readOldTrips({required String? userId}) => (super.noSuchMethod(
        Invocation.method(
          #readOldTrips,
          [],
          {#userId: userId},
        ),
        returnValue: _i3.Future<List<_i4.OldTrip>>.value(<_i4.OldTrip>[]),
        returnValueForMissingStub: _i3.Future<List<_i4.OldTrip>>.value(<_i4.OldTrip>[]),
      ) as _i3.Future<List<_i4.OldTrip>>);

  @override
  _i3.Future<void> importOldTrips({
    required String? userId,
    required _i5.ListMultimap<_i6.Trip, _i7.TripStopsContainer>? newTrips,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #importOldTrips,
          [],
          {
            #userId: userId,
            #newTrips: newTrips,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

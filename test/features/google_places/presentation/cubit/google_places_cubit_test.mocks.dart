// Mocks generated by Mockito 5.4.2 from annotations
// in trip_planner/test/features/google_places/presentation/cubit/google_places_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:trip_planner/features/google_places/domain/entities/place_details.dart'
    as _i9;
import 'package:trip_planner/features/google_places/domain/entities/suggestion.dart'
    as _i7;
import 'package:trip_planner/features/google_places/domain/repositories/google_places_repository.dart'
    as _i2;
import 'package:trip_planner/features/google_places/domain/usecases/fetch_place_details.dart'
    as _i8;
import 'package:trip_planner/features/google_places/domain/usecases/fetch_suggestions.dart'
    as _i4;
import 'package:trip_planner/features/google_places/errors/google_places_failure.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGooglePlacesRepository_0 extends _i1.SmartFake
    implements _i2.GooglePlacesRepository {
  _FakeGooglePlacesRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FetchSuggestions].
///
/// See the documentation for Mockito's code generation for more information.
class MockFetchSuggestions extends _i1.Mock implements _i4.FetchSuggestions {
  @override
  _i2.GooglePlacesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGooglePlacesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeGooglePlacesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.GooglePlacesRepository);
  @override
  _i5.Future<_i3.Either<_i6.GooglePlacesFailure, List<_i7.Suggestion>>> call(
          _i4.FetchSuggestionsParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<
                _i3
                .Either<_i6.GooglePlacesFailure, List<_i7.Suggestion>>>.value(
            _FakeEither_1<_i6.GooglePlacesFailure, List<_i7.Suggestion>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
        returnValueForMissingStub: _i5.Future<
                _i3
                .Either<_i6.GooglePlacesFailure, List<_i7.Suggestion>>>.value(
            _FakeEither_1<_i6.GooglePlacesFailure, List<_i7.Suggestion>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5
          .Future<_i3.Either<_i6.GooglePlacesFailure, List<_i7.Suggestion>>>);
}

/// A class which mocks [FetchPlaceDetails].
///
/// See the documentation for Mockito's code generation for more information.
class MockFetchPlaceDetails extends _i1.Mock implements _i8.FetchPlaceDetails {
  @override
  _i2.GooglePlacesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGooglePlacesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeGooglePlacesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.GooglePlacesRepository);
  @override
  _i5.Future<_i3.Either<_i6.GooglePlacesFailure, _i9.PlaceDetails>> call(
          _i8.FetchPlaceDetailsParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<
                _i3.Either<_i6.GooglePlacesFailure, _i9.PlaceDetails>>.value(
            _FakeEither_1<_i6.GooglePlacesFailure, _i9.PlaceDetails>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
        returnValueForMissingStub: _i5.Future<
                _i3.Either<_i6.GooglePlacesFailure, _i9.PlaceDetails>>.value(
            _FakeEither_1<_i6.GooglePlacesFailure, _i9.PlaceDetails>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.GooglePlacesFailure, _i9.PlaceDetails>>);
}

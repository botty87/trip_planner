// Mocks generated by Mockito 5.4.2 from annotations
// in trip_planner/test/features/google_places/domain/repositories/mock_google_places_repository.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:trip_planner/features/google_places/domain/entities/suggestion.dart'
    as _i6;
import 'package:trip_planner/features/google_places/domain/repositories/google_places_repository.dart'
    as _i3;
import 'package:trip_planner/features/google_places/errors/google_places_failure.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GooglePlacesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGooglePlacesRepository extends _i1.Mock
    implements _i3.GooglePlacesRepository {
  @override
  _i4.Future<
      _i2
      .Either<_i5.GooglePlacesFailure, List<_i6.Suggestion>>> fetchSuggestions({
    required String? query,
    required String? token,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSuggestions,
          [],
          {
            #query: query,
            #token: token,
          },
        ),
        returnValue: _i4.Future<
                _i2
                .Either<_i5.GooglePlacesFailure, List<_i6.Suggestion>>>.value(
            _FakeEither_0<_i5.GooglePlacesFailure, List<_i6.Suggestion>>(
          this,
          Invocation.method(
            #fetchSuggestions,
            [],
            {
              #query: query,
              #token: token,
            },
          ),
        )),
        returnValueForMissingStub: _i4.Future<
                _i2
                .Either<_i5.GooglePlacesFailure, List<_i6.Suggestion>>>.value(
            _FakeEither_0<_i5.GooglePlacesFailure, List<_i6.Suggestion>>(
          this,
          Invocation.method(
            #fetchSuggestions,
            [],
            {
              #query: query,
              #token: token,
            },
          ),
        )),
      ) as _i4
          .Future<_i2.Either<_i5.GooglePlacesFailure, List<_i6.Suggestion>>>);
}
